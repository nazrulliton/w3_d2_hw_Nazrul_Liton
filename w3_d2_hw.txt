# CRUD Quiz

Use the solution to this afternoon's Property Tracker lab to answer the following questions. Please write your answers under each question, push the file to GitHub, and submit in the usual way.

## MVP Questions

In our Property Tracker application:

Q1. Where are we instantiating instances of the `Property` class?

under def initialize

Q2. Where are we defining the SQL that enables us to save the ruby `Property` object into the database?

in the .sql page where we define the table structure.

Q3. In `console.rb`, which lines modify the database?

line 4 with the delete statement.

Q4. Why do we not define the id of a `Property` object at the point we instantiate it (‘new it up’)?

becasue the database creates unique ideas as a primary key for each row, however it would be bad practice to set/define the ids yourself - as it could lead to potential duplications or accidental merger of ids.

Q5. Where and how do we assign the id (that is generated by the database) to the ruby `Property` object?

in sql, we define the id with the data type of serial, which in turn creates a unique id for each row or instance.

Q6. Why do we put a guard (an `if` clause) on the `@id` attribute in the constructor?

because if no id found we dont want to add anything to the rest of the data, as because nothing will get found a nill will be attributed. using the if statement ensures only a corresponding value will be added if it exists, ensuring data integrity.

Q7. Why are some of the CRUD actions represented by instance methods, and others by class methods?

because some only require access at the record level and some actions require access at the class level. for example when using delete_all you use class methods as your are accessing and deleting everything within that class however with delete_by_[whatever_critera_you_wish], you are only accesses one or two records to delete.

Q8. What type of data structure is returned by calls to `db.exec_prepared()`? In the `save` method, how do we access the id from the returned data structure?
a array is return and we access it by placing the array in the instance. e.g. map function + Property.new
Q9. Why do we use prepared statements when performing database operations?

becasue sql commands are written in this manner and to use to software we require using sql syntax.
## Extension Questions

Look at the `find_by_id` and `find_by_address` methods in the `Property` class.

Q10. What do they take in as their arguments?
- the database name and where it is located.
- using sql syntax we use the select statement to state the columns we require and FROM to state where they are located then the WHERE statement to state how to locate this record/records.

Q11. What are their return values?
our search results will be placed into another instance of the class (within an array) and if nothing is found the code states to return the term 'nil' instead of returning an empty area with nil placed inside it,
